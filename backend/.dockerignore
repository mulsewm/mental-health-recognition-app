# Git
.git
.gitignore
.gitattributes

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.pytest_cache/
.mypy_cache/

# Virtual Environment
venv/
ENV/
.env
.venv
env/

# IDE
.idea/
.vscode/
*.swp
*.swo
*~

# Local development
*.log
*.sqlite3
*.sqlite

# Uploads
/uploads/
!/.keep

# Model files
*.pth
*.pt
*.h5
*.hdf5
*.pkl
*.joblib
*.bin
*.onnx
*.pb
*.tflite
*.tfl
*.safetensors
*.gguf

# Node
node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log
package-lock.json
yarn.lock

# Build and deployment
Dockerfile*
docker-compose*
.dockerignore
.railwayignore
.railway/

# System Files
.DS_Store
Thumbs.db

# Documentation
README.md
LICENSE
*.md

# Local config files
.env.local
.env.development
.env.test
.env.production

# Test files
tests/
*.test.py
*_test.py

# Coverage reports
.coverage
htmlcov/

# Jupyter Notebook
.ipynb_checkpoints

# VS Code
.vscode/

# PyCharm
.idea/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
.idea/

# VS Code
.vscode/

# Local development
*.log
*.sqlite3

# Uploads
/tmp/
!/.keep

# Model files
*.pth
*.pt
*.h5
*.hdf5
*.pkl
*.joblib
*.bin
*.onnx
*.pb
*.tflite
*.tfl

# Node
node_modules/
npm-debug.log
yarn-debug.log
yarn-error.log

# Railway
.railway/

# System Files
.DS_Store
Thumbs.db

# Ignore all files by default
*
